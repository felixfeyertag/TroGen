/*
 * Copyright (C) 2014 The University of Manchester
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2.0 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.mcr.trogen.gui;

import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.mcr.trogen.utils.SequenceType;
import org.mcr.trogen.utils.Tropism;
import org.mcr.trogen.utils.TropismAlgorithm;
import org.mcr.trogen.utils.TropismModel;
import org.mcr.trogen.utils.TropismModelSet;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.util.Lookup;

public final class ClassifyTropismVisualPanel1 extends JPanel {

    private File testingData;
    private SequenceType sequenceTypeValue;
    private DefaultListModel defaultListModel;
    private DefaultComboBoxModel defaultComboBoxModel;
    private TropismModelSet selectedModelSet;
    
    /**
     * Creates new form ClassifyTropismVisualPanel1
     */
    public ClassifyTropismVisualPanel1() {
        initComponents();
        
        
        defaultComboBoxModel = new DefaultComboBoxModel();
        for (String s : getModelNames()) {
            defaultComboBoxModel.addElement(s);
        }
        jComboBox1.setModel(defaultComboBoxModel);
        String modelName = getSelectedModel();
        FileObject configModel = FileUtil.getConfigRoot().getFileObject("TropismModels");
        /*if (!configModel.isFolder()) {
            FileObject modelFile = configModel.getFileObject(modelName, "model");
            selectedModelSet = TropismModelSet.readModelSetFromFile(modelFile);
            updateAlgorithmList();
        }
        else {
            JOptionPane.showMessageDialog(this, "No training models available.\nTrain new models using the Training Model Manager", "No training models available", JOptionPane.WARNING_MESSAGE);
        }*/
        
        ButtonGroup sequenceType = new ButtonGroup();
        sequenceType.add(jRadioButton1);
        sequenceType.add(jRadioButton2);
        jRadioButton1.setSelected(true);
        
        sequenceTypeValue = SequenceType.Protein;
    }
    
    public SequenceType getSequenceType() {
        return sequenceTypeValue;
    }

    @Override
    public String getName() {
        return "Configure";
    }

    public File getTestingData() {
        return testingData;
    }
    
    public List<String> getAlgorithmNames() {
        List<String> algorithmNames = new LinkedList<String>();
        for (int i : jList1.getSelectedIndices()) {
            algorithmNames.add((String)defaultListModel.get(i));
        }
        return algorithmNames;
    }
    
    public String getSelectedModel() {
        return (String)defaultComboBoxModel.getSelectedItem();
    }
    
    private List<String> getModelNames() {
        List<String> modelNames = new LinkedList<String>();
        FileObject configModel = FileUtil.getConfigRoot().getFileObject("TropismModels");
        if (configModel==null) {
            return modelNames;
        }
        for (FileObject fo : configModel.getChildren()) {
            modelNames.add(fo.getName());
            
            /*if (!modelSets.containsKey(fo.getName())) {
                System.out.println("Reading model set file: " + fo.getPath() + "/ " + fo.getName());
                modelSets.put(fo.getName(), TropismModelSet.readModelSetFromFile(fo));
            }*/
        }
        return modelNames;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jLabel3.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jLabel1.text_1")); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<none>" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        String modelName = "Default";
        FileObject configModel = FileUtil.getConfigRoot().getFileObject("TropismModels");
        FileObject modelFile = configModel.getFileObject(modelName, "model");
        selectedModelSet = TropismModelSet.readModelSetFromFile(modelFile);
        updateAlgorithmList();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jLabel2.text_1")); // NOI18N

        jScrollPane1.setViewportView(jList1);

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jButton1.text_1")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText(org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jTextField1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jLabel4.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jLabel5.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton1, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jRadioButton1.text_1")); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton2, org.openide.util.NbBundle.getMessage(ClassifyTropismVisualPanel1.class, "ClassifyTropismVisualPanel1.jRadioButton2.text_1")); // NOI18N
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1))
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jLabel5))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if (jRadioButton1.isSelected()) {
            this.sequenceTypeValue = SequenceType.Protein;
        }
        else {
            this.sequenceTypeValue = SequenceType.DNA;
        }
        this.updateUI();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            testingData = fileChooser.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextArea
                jTextField1.setText(testingData.getCanonicalPath());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Problem accessing file: " + testingData.getAbsolutePath(), TOOL_TIP_TEXT_KEY, JOptionPane.WARNING_MESSAGE);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
        this.updateUI();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String modelName = getSelectedModel();
        FileObject configModel = FileUtil.getConfigRoot().getFileObject("TropismModels");
        FileObject modelFile = configModel.getFileObject(modelName, "model");
        selectedModelSet = TropismModelSet.readModelSetFromFile(modelFile);
        updateAlgorithmList();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        if (jRadioButton2.isSelected()) {
            this.sequenceTypeValue = SequenceType.DNA;
        }
        else {
            this.sequenceTypeValue = SequenceType.Protein;
        }
        
        this.updateUI();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void updateAlgorithmList() {
        Collection<? extends TropismAlgorithm> algorithms = Lookup.getDefault().lookupAll(TropismAlgorithm.class);
        Map<String,TropismModel> models = selectedModelSet.getModels();
        defaultListModel = new DefaultListModel();
        for (String algorithm : models.keySet()) {
            defaultListModel.addElement(algorithm);
        }
        jList1.setModel(defaultListModel);
        jList1.setSelectionInterval(0, defaultListModel.getSize()-1);
    }
    
    public TropismModelSet getSelectedModelSet() {
        return selectedModelSet;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
